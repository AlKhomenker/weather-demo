{"version":3,"sources":["Components/ItemDay/ItemDay.module.css","Components/Navigation/NavBar/NavBar.module.css","Components/ImageSection/ImageSection.module.css","Components/SearchLocation/SearchLocation.module.css","Components/CurrentLocation/CurrentLocation.module.css","Store/types.js","Store/Reducers/locationReducer.js","Components/ModalPopUp/ModalPopUp.js","Components/SearchLocation/SearchLocation.js","Assets/weatherTheme/city.png","Components/ImageSection/ImageSection.js","Store/Reducers/themeReducer.js","Components/ItemDay/ItemDay.js","Components/CurrentLocation/CurrentLocation.js","Store/Reducers/weatherReducer.js","Pages/Main/Main.js","Pages/Favorite/Favorite.js","Assets/logo.png","Store/Reducers/favoriteLocationReducer.js","Components/Navigation/NavBar/NavBar.js","App.js","Store/store.js","index.js"],"names":["module","exports","SET_THEME","SET_NEW_URL","SET_NEW_DEGREE_SYSTEM","SET_CURRENT_WEATHER","SET_WEATHER_ON5_DAYS","SET_NEW_LOCATION","SET_FAVORITE_LOCATION","defaultState","location","Version","Key","Type","Rank","LocalizedName","Country","ID","AdministrativeArea","setNewLocation","type","payload","ModalPopUp","props","useState","show","setShow","useEffect","handleClose","Modal","onHide","backdrop","keyboard","Header","Title","title","Body","message","Footer","Button","variant","onClick","SearchLocation","dispatch","useDispatch","setLocation","status","setStatus","length","test","handleSubmit","e","a","preventDefault","axios","get","then","res","data","catch","err","console","log","Form","className","styles","wrapper","InputGroup","FormControl","placeholder","value","input","onChange","target","btn","style","cursor","disabled","ImageSection","header","background","city","txt","cascade","quote","theme","window","localStorage","getItem","page","degrees","setTheme","setNewPageUrl","setNewDegreeSystem","degree","list","ItemDay","currentPage","useSelector","state","themeStates","currentDegrees","getChooseLocation","changeDayState","Date","date","toLocaleDateString","currentDate","onMouseEnter","onMouseLeave","color","description","dayOfWeek","minTempF","maxTempF","minTempC","maxTempC","icon","faSun","day","faMoon","night","currentWeatherText","backgroundColor","tempF","tempC","weatherText","to","id","index","CurrentLocation","themeColor","setThemeColor","currentTheme","background1","background2","map","item","currentWeather","LocalObservationDateTime","WeatherText","left","weeksBlock","block","weatherOn5Days","setCurrentWeather","weather","setWeatherOn5Days","Main","days","setDays","setWeather","currentLocation","locationState","weatherState","locationKey","getCurrentWeather","getWeatherOn5Days","key","weatherChanges","Object","keys","dateChanges","arrayWeather","newDay","daysArr","i","DailyForecasts","toDateString","substring","includes","Temperature","Minimum","Value","Maximum","Math","round","Day","IconPhrase","Night","push","Favorite","favorite","setfavorite","favoriteLocation","favoritesLocationsState","addNewFavoriteLocation","arr","newDataLocation","Metric","Imperial","setFavoriteLocation","newLocation","NavBar","statusLocation","setStatusLocation","screenWidth","setScreenWidth","popUpMessage","setPopUpMessage","innerWidth","pathname","changePage","navBlock","container","src","logo","alt","images","exact","activeStyle","fontWeight","borderBottom","NavLink","btnSave","indexElement","indexOf","splice","faHeart","favoriteArr","App","path","component","from","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36ca4504.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ItemDay_wrapper__AlvZP\",\"description\":\"ItemDay_description__17W0I\",\"btn\":\"ItemDay_btn__1EaRv\",\"id\":\"ItemDay_id__3-QI_\",\"txt\":\"ItemDay_txt__3xGVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBlock\":\"NavBar_navBlock__1b5Vj\",\"container\":\"NavBar_container__3I_cO\",\"NavLink\":\"NavBar_NavLink__2bpF3\",\"images\":\"NavBar_images__3-HRK\",\"btn\":\"NavBar_btn__3lVQr\",\"btnSave\":\"NavBar_btnSave__303TV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"ImageSection_header__19ZuZ\",\"txt\":\"ImageSection_txt__2bcVC\",\"quote\":\"ImageSection_quote__URfSc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SearchLocation_wrapper__-_efv\",\"btn\":\"SearchLocation_btn__v-71y\",\"input\":\"SearchLocation_input__CXjz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weeksBlock\":\"CurrentLocation_weeksBlock__15ZfS\",\"block\":\"CurrentLocation_block__2flCk\"};","export const SET_THEME = 'SET_THEME';\r\nexport const SET_NEW_URL = 'SET_NEW_URL';\r\nexport const SET_NEW_DEGREE_SYSTEM = 'SET_NEW_DEGREE_SYSTEM';\r\n\r\nexport const SET_CURRENT_WEATHER = 'SET_CURRENT_WEATHER';\r\nexport const SET_WEATHER_ON5_DAYS = 'SET_WEATHER_ON5_DAYS';\r\n\r\nexport const SET_NEW_LOCATION = 'SET_NEW_LOCATION';\r\n\r\nexport const SET_FAVORITE_LOCATION = 'SET_FAVORITE_LOCATION';","import {SET_NEW_LOCATION} from \"../types\";\r\n\r\n\r\nconst defaultState = {\r\n    location:{\r\n        Version: 1,\r\n        Key: \"215854\",\r\n        Type: \"City\",\r\n        Rank: 31,\r\n        LocalizedName: \"Tel Aviv\",\r\n        Country: {\r\n            ID: \"IL\",\r\n            LocalizedName: \"Israel\"\r\n        },\r\n        AdministrativeArea: {\r\n            ID: \"TA\",\r\n            LocalizedName: \"Tel Aviv\"\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport const setNewLocation = (location) => ({\r\n    type: SET_NEW_LOCATION,\r\n    payload: location\r\n});\r\n\r\n\r\nexport default function themeReducer(state= defaultState, action){\r\n    switch (action.type) {\r\n        case SET_NEW_LOCATION:\r\n            return {\r\n                ...state,\r\n                location: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Modal } from 'react-bootstrap';\r\n\r\nconst ModalPopUp = (props) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n       setShow(props.show);\r\n    }, [props.show]);\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>{props.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {props.message}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport {ModalPopUp};\r\n","import React, {useState, useEffect} from 'react';\r\nimport styles from './SearchLocation.module.css';\r\nimport {Form, InputGroup, FormControl, Button} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setNewLocation} from \"../../Store/Reducers/locationReducer\";\r\nimport {ModalPopUp} from \"../ModalPopUp/ModalPopUp\";\r\n\r\n\r\nconst SearchLocation = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [location, setLocation] = useState('');\r\n    const [status, setStatus] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        const value = e.target.value;\r\n        setLocation(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const pattern = /^[a-zA-Z\\s-]+$/;\r\n        if (location.length > 0 && pattern.test(location)) {\r\n            setStatus(true);\r\n        } else {\r\n            setStatus(false);\r\n        }\r\n    }, [location]);\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (status) {\r\n            await axios.get(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=%09xrWzkJzTkGOGl6mYcWcDrE5tn9djaGlK&q=${location}`)\r\n                .then(res => {\r\n                    dispatch(setNewLocation(res.data[0]));\r\n                    setLocation('');\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                    setShow(true);\r\n                    setLocation(location);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Form className={styles.wrapper}>\r\n                <InputGroup className=\"mb-\">\r\n                    <FormControl placeholder=\"Find out the weather in your city:\" value={location}\r\n                                 className={styles.input} onChange={handleChange}/>\r\n                    <Button variant='outline-light' className={styles.btn} onClick={handleSubmit}\r\n                            style={{cursor: `${(!status) ? ('not-allowed') : ('pointer')}`}}\r\n                            disabled={(!status) ? ('disabled') : null}>search</Button>\r\n                </InputGroup>\r\n                <span>names must be in English only, may contain spaces and hyphens</span>\r\n            </Form>\r\n            <ModalPopUp show={show} title={'Input Error:'} message={`Sorry, we cannot find this city: \"${location}\" . Please check if you have written correctly.`}/>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport {SearchLocation};\r\n","export default __webpack_public_path__ + \"static/media/city.fba57f48.png\";","import React from 'react';\r\nimport styles from './ImageSection.module.css';\r\nimport {SearchLocation} from \"../SearchLocation/SearchLocation\";\r\n\r\nimport city from '../../Assets/weatherTheme/city.png';\r\nimport Zoom from \"react-reveal/Zoom\";\r\n\r\nconst ImageSection = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.header} style={{background:`url(${city})`}}>\r\n                <div className={styles.txt}>\r\n                    <Zoom cascade>  <h1>{props.header}</h1></Zoom>\r\n                    <div className={styles.quote}>\r\n                        <p>{props.quote}</p>\r\n                        <hr/>\r\n                    </div>\r\n\r\n                    {(props.header !== 'favorite')?(\r\n                        <SearchLocation/>\r\n                    ): null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport {ImageSection};\r\n","import {SET_THEME, SET_NEW_URL,SET_NEW_DEGREE_SYSTEM} from '../types'\r\n\r\nconst localStorage = window.localStorage;\r\n\r\nconst defaultState = {\r\n    theme:  localStorage.getItem('localTheme'),\r\n    page: '',\r\n    degrees: 'fahrenheit'\r\n};\r\n\r\n\r\nexport const setTheme = (theme) => ({\r\n    type: SET_THEME,\r\n    payload: theme\r\n});\r\n\r\nexport const setNewPageUrl = (page) => ({\r\n    type: SET_NEW_URL,\r\n    payload: page\r\n});\r\n\r\nexport const setNewDegreeSystem = (degree) => ({\r\n    type: SET_NEW_DEGREE_SYSTEM,\r\n    payload: degree\r\n});\r\n\r\nexport default function themeReducer(state= defaultState, action){\r\n    switch (action.type) {\r\n        case SET_THEME:\r\n            return {\r\n                ...state,\r\n                theme: action.payload\r\n            }\r\n        case SET_NEW_URL:\r\n            return {\r\n                ...state,\r\n                page: action.payload\r\n            }\r\n        case SET_NEW_DEGREE_SYSTEM:\r\n            return {\r\n                ...state,\r\n                degrees: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport styles from './ItemDay.module.css';\r\nimport axios from \"axios\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSun, faMoon} from '@fortawesome/free-solid-svg-icons';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setNewLocation} from \"../../Store/Reducers/locationReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {setNewPageUrl} from \"../../Store/Reducers/themeReducer\";\r\n\r\n\r\nconst ItemDay = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const currentPage = useSelector(state => state.themeStates.page);\r\n    const currentDegrees = useSelector(state => state.themeStates.degrees);\r\n\r\n    const [status, setStatus] = useState(false);\r\n\r\n    const getChooseLocation = async (location,page) => {\r\n        dispatch(setNewPageUrl(page));\r\n        await axios.get(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=%09xrWzkJzTkGOGl6mYcWcDrE5tn9djaGlK&q=${location}`)\r\n            .then(res => {\r\n                dispatch(setNewLocation(res.data[0]))\r\n            }).catch(err => {\r\n                console.log(err)\r\n            });\r\n    }\r\n\r\n\r\n    const changeDayState = (value) => {\r\n        setStatus(value);\r\n    }\r\n\r\n\r\n    if (currentPage === '/') {\r\n        if (new Date(props.date).toLocaleDateString() === new Date(props.currentDate).toLocaleDateString()) {\r\n            return (\r\n                <div className={styles.wrapper}\r\n                     style={{background: (status) ? (`${props.background}`) : ('linear-gradient(to bottom right, #FFDBC6, #1F5CAE)')}}\r\n                     onMouseEnter={() => changeDayState(true)}\r\n                     onMouseLeave={() => changeDayState(false)}>\r\n                    {(status) ? (\r\n                        <div style={{color: `${props.color}`}}>\r\n                            <div className={styles.description}>\r\n                                <h4>{props.dayOfWeek}</h4>\r\n                                {(currentDegrees === 'fahrenheit')?(\r\n                                    <h3>{props.minTempF}&#8457; - {props.maxTempF}&#8457;</h3>\r\n                                ):(\r\n                                    <h3>{props.minTempC}&#8451; - {props.maxTempC}&#8451;</h3>\r\n                                )}\r\n                            </div>\r\n                            <div className={styles.description}>\r\n                                <p><FontAwesomeIcon icon={faSun}/> : {props.day}</p>\r\n                                <p><FontAwesomeIcon icon={faMoon}/> : {props.night}</p>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className={styles.description} style={{color: 'white'}}>\r\n                            <h4>{props.dayOfWeek}, {new Date(props.currentDate).toLocaleDateString()} </h4>\r\n                            <h3>{props.currentWeatherText}</h3>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className={styles.wrapper}\r\n                     style={{background: (status) ? ('linear-gradient(to bottom right, #FFDBC6, #1F5CAE)') : (`${props.background}`)}}\r\n                     onMouseEnter={() => changeDayState(true)}\r\n                     onMouseLeave={() => changeDayState(false)}>\r\n                    {(status) ? (\r\n                        <div className={styles.description} style={{color: 'white'}}>\r\n                            <h4>{props.dayOfWeek}</h4>\r\n                            <h3>{props.currentWeatherText}</h3>\r\n                        </div>\r\n                    ) : (\r\n                        <div style={{color: `${props.color}`}}>\r\n                            <div className={styles.description}>\r\n                                <h4>{props.dayOfWeek}</h4>\r\n                                {(currentDegrees === 'fahrenheit')?(\r\n                                    <h3>{props.minTempF}&#8457; - {props.maxTempF}&#8457;</h3>\r\n                                ):(\r\n                                    <h3>{props.minTempC}&#8451; - {props.maxTempC}&#8451;</h3>\r\n                                )}\r\n                            </div>\r\n                            <div className={styles.description}>\r\n                                <p><FontAwesomeIcon icon={faSun}/> : {props.day}</p>\r\n                                <p><FontAwesomeIcon icon={faMoon}/> : {props.night}</p>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )\r\n        }\r\n    } else {\r\n        return (\r\n            <div className={styles.wrapper} style={{backgroundColor: `${props.background}`}}>\r\n                <div className={styles.description} style={{color: `${props.color}`}}>\r\n                    <h3>{props.city}</h3>\r\n                    {(currentDegrees === 'fahrenheit')?(\r\n                        <h4>{props.tempF}&#8457;</h4>\r\n                    ):(\r\n                        <h4>{props.tempC}&#8451;</h4>\r\n                    )}\r\n                    <h4>{props.weatherText}</h4>\r\n                    <NavLink to='/'>\r\n                        <Button variant=\"outline-light\" className={styles.btn} onClick={() => getChooseLocation(props.city,'/')}>see more</Button>\r\n                    </NavLink>\r\n                </div>\r\n                <span className={styles.id} style={{color: `${props.color}`}}>{props.index + 1}</span>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport {ItemDay};\r\n","import React, {useEffect, useState} from 'react';\r\nimport styles from './CurrentLocation.module.css';\r\nimport {ImageSection} from \"../ImageSection/ImageSection\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ItemDay} from \"../ItemDay/ItemDay\";\r\n\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nlet list;\r\nconst CurrentLocation = (props) => {\r\n\r\n    const [themeColor, setThemeColor] = useState({});\r\n    const currentTheme = useSelector(state => state.themeStates.theme);\r\n\r\n\r\n    useEffect(() => {\r\n        if (currentTheme === 'light') {\r\n            setThemeColor({\r\n                background1: '#F5F5F5',\r\n                background2: 'white',\r\n                color: '#272E38'\r\n            });\r\n        } else {\r\n            setThemeColor({\r\n                background1: '#272E38',\r\n                background2: '#313842',\r\n                color: 'white'\r\n            });\r\n        }\r\n    }, [currentTheme]);\r\n\r\n\r\n    list = props.data.map((item, index) => {\r\n        if(props.header === 'favorite'){\r\n            if (index % 2 === 1) {\r\n                return (\r\n                    <ItemDay\r\n                        key={index}\r\n                        index={index}\r\n                        city={item.city}\r\n                        tempC={item.tempC}\r\n                        tempF={item.tempF}\r\n                        weatherText={item.weatherText}\r\n\r\n                        background={themeColor.background1}\r\n                        color={themeColor.color}/>\r\n                )\r\n            } else {\r\n                return (\r\n                    <ItemDay\r\n                        key={index}\r\n                        index={index}\r\n                        city={item.city}\r\n                        tempC={item.tempC}\r\n                        tempF={item.tempF}\r\n                        weatherText={item.weatherText}\r\n\r\n                        background={themeColor.background2}\r\n                        color={themeColor.color}/>\r\n                )\r\n            }\r\n        }else{\r\n            if (index % 2 === 1) {\r\n                return (\r\n                    <ItemDay\r\n                        key={index}\r\n                        index={index}\r\n                        dayOfWeek={item.dayOfWeek}\r\n                        date={item.date}\r\n                        minTempF={item.minTempF}\r\n                        maxTempF={item.maxTempF}\r\n                        minTempC={item.minTempC}\r\n                        maxTempC={item.maxTempC}\r\n                        day={item.day}\r\n                        night={item.night}\r\n                        currentDate={props.currentWeather.LocalObservationDateTime}\r\n                        currentWeatherText={props.currentWeather.WeatherText}\r\n\r\n                        background={themeColor.background1}\r\n                        color={themeColor.color}/>\r\n                )\r\n            } else {\r\n                return (\r\n                    <ItemDay\r\n                        key={index}\r\n                        index={index}\r\n                        dayOfWeek={item.dayOfWeek}\r\n                        date={item.date}\r\n                        minTempF={item.minTempF}\r\n                        maxTempF={item.maxTempF}\r\n                        minTempC={item.minTempC}\r\n                        maxTempC={item.maxTempC}\r\n                        day={item.day}\r\n                        night={item.night}\r\n                        currentDate={props.currentWeather.LocalObservationDateTime}\r\n                        currentWeatherText={props.currentWeather.WeatherText}\r\n\r\n                        background={themeColor.background2}\r\n                        color={themeColor.color}/>\r\n                )\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ImageSection header={props.header} quote={props.quote}/>\r\n            {(props.data.length > 0) ?\r\n                (<Fade left>\r\n                    <div className={styles.weeksBlock}>\r\n                         {list}\r\n                    </div>\r\n                </Fade>\r\n\r\n                ) : (\r\n                    <div className={styles.block} style={{color: `${themeColor.color}`}}>\r\n                        <p>There are no saved locations in your list.</p>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport {CurrentLocation};\r\n","import {SET_CURRENT_WEATHER, SET_WEATHER_ON5_DAYS} from '../types'\r\n\r\nconst defaultState = {\r\n    currentWeather: [/*{\r\n        LocalObservationDateTime: \"2021-07-23T13:31:00+03:00\",\r\n        EpochTime: 1627036260,\r\n        WeatherText: \"Clouds and sun\",\r\n        WeatherIcon: 4,\r\n        HasPrecipitation: false,\r\n        PrecipitationType: null,\r\n        IsDayTime: true,\r\n        Temperature: {\r\n            Metric: {\r\n                Value: 30.6,\r\n                Unit: \"C\",\r\n                UnitType: 17\r\n            },\r\n            Imperial: {\r\n                Value: 87,\r\n                Unit: \"F\",\r\n                UnitType: 18\r\n            }\r\n        },\r\n        MobileLink: \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\",\r\n        Link: \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\"\r\n    }*/],\r\n    weatherOn5Days: {\r\n   /*     Headline: {\r\n            EffectiveDate: \"2021-07-24T08:00:00+03:00\",\r\n            EffectiveEpochDate: 1627102800,\r\n            Severity: 4,\r\n            Text: \"Pleasant this weekend\",\r\n            Category: \"mild\",\r\n            EndDate: null,\r\n            EndEpochDate: null,\r\n            MobileLink: \"http://www.accuweather.com/en/il/tel-aviv/215854/extended-weather-forecast/215854?lang=en-us\",\r\n            Link: \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?lang=en-us\"\r\n        },\r\n        DailyForecasts: [\r\n            {\r\n                Date: \"2021-07-23T07:00:00+03:00\",\r\n                EpochDate: 1627012800,\r\n                Temperature: {\r\n                    Minimum: {\r\n                        Value: 75,\r\n                        Unit: \"F\",\r\n                        UnitType: 18\r\n                    },\r\n                    Maximum: {\r\n                        Value: 82,\r\n                        Unit: \"F\",\r\n                        UnitType: 18\r\n                    }\r\n                },\r\n                Day: {\r\n                    Icon: 3,\r\n                    IconPhrase: \"Partly sunny\", HasPrecipitation: true,\r\n                    PrecipitationType: \"Rain\",\r\n                    PrecipitationIntensity: \"Light\"\r\n                },\r\n                Night: {\r\n                    Icon: 36,\r\n                    IconPhrase: \"Intermittent clouds\",\r\n                    HasPrecipitation: false\r\n                },\r\n                Sources: [\r\n                    \"AccuWeather\"\r\n                ],\r\n                MobileLink: \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us\",\r\n                Link: \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us\"\r\n            },\r\n            {\r\n                Date: \"2021-07-24T07:00:00+03:00\",\r\n                EpochDate: 1627012800,\r\n                Temperature: {\r\n                    Minimum: {\r\n                        Value: 85,\r\n                        Unit: \"F\",\r\n                        UnitType: 18\r\n                    },\r\n                    Maximum: {\r\n                        Value: 97,\r\n                        Unit: \"F\",\r\n                        UnitType: 18\r\n                    }\r\n                },\r\n                Day: {\r\n                    Icon: 3,\r\n                    IconPhrase: \"Partly sunny\", HasPrecipitation: true,\r\n                    PrecipitationType: \"Rain\",\r\n                    PrecipitationIntensity: \"Light\"\r\n                },\r\n                Night: {\r\n                    Icon: 36,\r\n                    IconPhrase: \"Intermittent clouds\",\r\n                    HasPrecipitation: false\r\n                },\r\n                Sources: [\r\n                    \"AccuWeather\"\r\n                ],\r\n                MobileLink: \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us\",\r\n                Link: \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us\"\r\n            },\r\n            {\r\n                Date: \"2021-07-25T07:00:00+03:00\",\r\n                EpochDate: 1627012800,\r\n                Temperature: {\r\n                    Minimum: {\r\n                        Value: 55,\r\n                        Unit: \"F\",\r\n                        UnitType: 18\r\n                    },\r\n                    Maximum: {\r\n                        Value: 107,\r\n                        Unit: \"F\",\r\n                        UnitType: 18\r\n                    }\r\n                },\r\n                Day: {\r\n                    Icon: 3,\r\n                    IconPhrase: \"Partly sunny\", HasPrecipitation: true,\r\n                    PrecipitationType: \"Rain\",\r\n                    PrecipitationIntensity: \"Light\"\r\n                },\r\n                Night: {\r\n                    Icon: 36,\r\n                    IconPhrase: \"Intermittent clouds\",\r\n                    HasPrecipitation: false\r\n                },\r\n                Sources: [\r\n                    \"AccuWeather\"\r\n                ],\r\n                MobileLink: \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us\",\r\n                Link: \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us\"\r\n            },\r\n            {\r\n                Date: \"2021-07-26T07:00:00+03:00\",\r\n                EpochDate: 1627012800,\r\n                Temperature: {\r\n                    Minimum: {\r\n                        Value: 85,\r\n                        Unit: \"F\",\r\n                        UnitType: 18\r\n                    },\r\n                    Maximum: {\r\n                        Value: 87,\r\n                        Unit: \"F\",\r\n                        UnitType: 18\r\n                    }\r\n                },\r\n                Day: {\r\n                    Icon: 3,\r\n                    IconPhrase: \"Partly sunny\", HasPrecipitation: true,\r\n                    PrecipitationType: \"Rain\",\r\n                    PrecipitationIntensity: \"Light\"\r\n                },\r\n                Night: {\r\n                    Icon: 36,\r\n                    IconPhrase: \"Intermittent clouds\",\r\n                    HasPrecipitation: false\r\n                },\r\n                Sources: [\r\n                    \"AccuWeather\"\r\n                ],\r\n                MobileLink: \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us\",\r\n                Link: \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us\"\r\n            },\r\n            {\r\n                Date: \"2021-07-27T07:00:00+03:00\",\r\n                EpochDate: 1627012800,\r\n                Temperature: {\r\n                    Minimum: {\r\n                        Value: 85,\r\n                        Unit: \"F\",\r\n                        UnitType: 18\r\n                    },\r\n                    Maximum: {\r\n                        Value: 87,\r\n                        Unit: \"F\",\r\n                        UnitType: 18\r\n                    }\r\n                },\r\n                Day: {\r\n                    Icon: 3,\r\n                    IconPhrase: \"Partly sunny\", HasPrecipitation: true,\r\n                    PrecipitationType: \"Rain\",\r\n                    PrecipitationIntensity: \"Light\"\r\n                },\r\n                Night: {\r\n                    Icon: 36,\r\n                    IconPhrase: \"Intermittent clouds\",\r\n                    HasPrecipitation: false\r\n                },\r\n                Sources: [\r\n                    \"AccuWeather\"\r\n                ],\r\n                MobileLink: \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us\",\r\n                Link: \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us\"\r\n            }\r\n        ]*/\r\n    }\r\n};\r\n\r\n\r\nexport const setCurrentWeather = (weather) => ({\r\n    type: SET_CURRENT_WEATHER,\r\n    payload: weather\r\n});\r\n\r\nexport const setWeatherOn5Days = (weather) => ({\r\n    type: SET_WEATHER_ON5_DAYS,\r\n    payload: weather\r\n});\r\n\r\n\r\nexport default function weatherReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_WEATHER:\r\n            return {\r\n                ...state,\r\n                currentWeather: action.payload\r\n            }\r\n        case SET_WEATHER_ON5_DAYS:\r\n            return {\r\n                ...state,\r\n                weatherOn5Days: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {CurrentLocation} from \"../../Components/CurrentLocation/CurrentLocation\";\r\n\r\nimport axios from \"axios\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setCurrentWeather, setWeatherOn5Days} from \"../../Store/Reducers/weatherReducer\";\r\nimport {ModalPopUp} from \"../../Components/ModalPopUp/ModalPopUp\";\r\n\r\nconst Main = () => {\r\n\r\n    const [days, setDays] = useState([]);\r\n    const [weather, setWeather] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const currentLocation = useSelector(state => state.locationState.location);\r\n    const currentWeather = useSelector(state => state.weatherState.currentWeather);\r\n    const weatherOn5Days = useSelector(state => state.weatherState.weatherOn5Days);\r\n\r\n\r\n    useEffect(() => {\r\n        let locationKey = currentLocation.Key;\r\n        getCurrentWeather(locationKey);\r\n        getWeatherOn5Days(locationKey);\r\n    }, [currentLocation]);\r\n\r\n\r\n    const getCurrentWeather = async (key) => {\r\n        await axios.get(`http://dataservice.accuweather.com/currentconditions/v1/${key}?apikey=xrWzkJzTkGOGl6mYcWcDrE5tn9djaGlK`)\r\n             .then(res => {\r\n                 dispatch(setCurrentWeather(res.data))\r\n             }).catch(err => {\r\n                 console.log(err);\r\n                 setShow(true);\r\n             });\r\n    }\r\n\r\n    useEffect(() => {\r\n        weatherChanges(currentWeather);\r\n    }, [currentWeather]);\r\n\r\n\r\n    const weatherChanges = (data) => {\r\n        if(Object.keys(data).length > 0){\r\n            setWeather(data[0])\r\n        }\r\n    }\r\n\r\n    const getWeatherOn5Days = async (key) => {\r\n        await axios.get(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${key}?apikey=xrWzkJzTkGOGl6mYcWcDrE5tn9djaGlK`)\r\n            .then(res => {\r\n                dispatch(setWeatherOn5Days(res.data))\r\n            }).catch(err => {\r\n                console.log(err);\r\n                 setShow(true);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        dateChanges(weatherOn5Days);\r\n    }, [weatherOn5Days]);\r\n\r\n\r\n    const dateChanges = (data) => {\r\n        let arrayWeather = [];\r\n        let newDay = [];\r\n        let daysArr = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\r\n\r\n        if(Object.keys(data).length > 0){\r\n            for (let i = 0; i< data.DailyForecasts.length; i++){\r\n                let day = new Date(data.DailyForecasts[i].Date).toDateString().substring(0,3);\r\n                let dayOfWeek = '';\r\n\r\n                daysArr.map((item,index) => {\r\n                    if(item.includes(day)){\r\n                        dayOfWeek = item;\r\n                    }\r\n                    return dayOfWeek;\r\n                });\r\n\r\n                newDay[i] = {\r\n                    dayOfWeek: dayOfWeek,\r\n                    date: data.DailyForecasts[i].Date,\r\n                    minTempF: data.DailyForecasts[i].Temperature.Minimum.Value,\r\n                    maxTempF: data.DailyForecasts[i].Temperature.Maximum.Value,\r\n                    minTempC: Math.round((5/9) * (data.DailyForecasts[i].Temperature.Minimum.Value - 32)),\r\n                    maxTempC: Math.round((5/9) * (data.DailyForecasts[i].Temperature.Maximum.Value - 32)),\r\n                    day: data.DailyForecasts[i].Day.IconPhrase,\r\n                    night: data.DailyForecasts[i].Night.IconPhrase\r\n                }\r\n                arrayWeather.push( newDay[i])\r\n            }\r\n            setDays(arrayWeather);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n            <div>\r\n                <CurrentLocation header={currentLocation.LocalizedName} quote='Be the first to know the weather and be in trend!' data={days} currentWeather={weather}/>\r\n                <ModalPopUp show={show} title={'Something went wrong!'} message={'Please reload the page or try again later.'}/>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {CurrentLocation} from \"../../Components/CurrentLocation/CurrentLocation\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst Favorite = () => {\r\n\r\n    const [favorite, setfavorite] = useState([]);\r\n    const favoriteLocation = useSelector(state => state.favoritesLocationsState.favoriteLocation);\r\n    const currentWeather = useSelector(state => state.weatherState.currentWeather);\r\n\r\n    useEffect(() => {\r\n        addNewFavoriteLocation(favoriteLocation);\r\n    }, [favoriteLocation]);\r\n\r\n\r\n    const addNewFavoriteLocation = (data) => {\r\n        let arr = [];\r\n        let newDataLocation = {};\r\n        if(Object.keys(data).length > 0){\r\n            for (let i = 0; i< data.length; i++) {\r\n                newDataLocation = {\r\n                    tempC: currentWeather[0].Temperature.Metric.Value,\r\n                    tempF: currentWeather[0].Temperature.Imperial.Value,\r\n                    weatherText: currentWeather[0].WeatherText,\r\n                    city: data[i].LocalizedName\r\n                };\r\n                arr.push(newDataLocation)\r\n            }\r\n        }\r\n        setfavorite(arr);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <CurrentLocation header='favorite' quote='Traveling we get to know not only the world, but also ourselves' data={favorite}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Favorite;\r\n","export default __webpack_public_path__ + \"static/media/logo.1087f8ae.png\";","import {SET_FAVORITE_LOCATION} from '../types'\r\n\r\n\r\nconst defaultState = {\r\n    favoriteLocation: []\r\n};\r\n\r\n\r\nexport const setFavoriteLocation = (newLocation) => ({\r\n    type: SET_FAVORITE_LOCATION,\r\n    payload: newLocation\r\n});\r\n\r\n\r\n\r\nexport default function favoriteLocationReducer(state= defaultState, action){\r\n    switch (action.type) {\r\n        case SET_FAVORITE_LOCATION:\r\n            return {\r\n                ...state,\r\n                favoriteLocation: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport styles from './NavBar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport logo from '../../../Assets/logo.png';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSun, faMoon, faHeart} from '@fortawesome/free-solid-svg-icons';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setNewPageUrl, setTheme, setNewDegreeSystem} from \"../../../Store/Reducers/themeReducer\";\r\nimport {setFavoriteLocation} from \"../../../Store/Reducers/favoriteLocationReducer\";\r\nimport {ModalPopUp} from \"../../ModalPopUp/ModalPopUp\";\r\n\r\n\r\nconst NavBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const currentTheme = useSelector(state => state.themeStates.theme);\r\n    const currentDegrees = useSelector(state => state.themeStates.degrees);\r\n    const currentPage = useSelector(state => state.themeStates.page);\r\n    const currentLocation = useSelector(state => state.locationState.location);\r\n    const favoriteLocation = useSelector(state => state.favoritesLocationsState.favoriteLocation);\r\n\r\n    const [statusLocation, setStatusLocation] = useState(false);\r\n    const [screenWidth, setScreenWidth] = useState(0);\r\n    const [show, setShow] = useState(false);\r\n    const [popUpMessage, setPopUpMessage] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        setScreenWidth(window.innerWidth);\r\n        dispatch(setNewPageUrl(window.location.pathname));\r\n    }, [dispatch]);\r\n\r\n\r\n    const changeThemes = () => {\r\n        if(currentTheme === 'light'){\r\n            dispatch(setTheme('dark'));\r\n        }else{\r\n            dispatch(setTheme('light'));\r\n        }\r\n    }\r\n\r\n    const changeDegrees = () => {\r\n        if(currentDegrees === 'fahrenheit'){\r\n            dispatch(setNewDegreeSystem('celsius'));\r\n        }else{\r\n            dispatch(setNewDegreeSystem('fahrenheit'));\r\n        }\r\n    }\r\n\r\n\r\n    const changePage = (page) => {\r\n        dispatch(setNewPageUrl(page));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        for (let i = 0; i < favoriteLocation.length; i++){\r\n            if(favoriteLocation[i].Key === currentLocation.Key){\r\n                setStatusLocation(true);\r\n            }else {\r\n                setStatusLocation(false);\r\n            }\r\n        }\r\n    }, [currentLocation,favoriteLocation]);\r\n\r\n\r\n\r\n    const addLocation = () => {\r\n        let favoriteArr = [];\r\n        for (let i = 0; i< favoriteLocation.length; i++){\r\n            favoriteArr.push(favoriteLocation[i])\r\n        }\r\n        if(!favoriteArr.includes(currentLocation)){\r\n            favoriteArr.push(currentLocation);\r\n            dispatch(setFavoriteLocation(favoriteArr));\r\n            setStatusLocation(true);\r\n            setShow(true);\r\n            setPopUpMessage({title:'Added successfully!', message:`You have added this city: \" ${currentLocation.LocalizedName}\" to your favorites`});\r\n        }\r\n    }\r\n\r\n    const removeLocation = () => {\r\n        for (let i = 0; i < favoriteLocation.length; i++){\r\n            if(favoriteLocation[i].Key === currentLocation.Key){\r\n                let indexElement = favoriteLocation.indexOf(currentLocation);\r\n                favoriteLocation.splice(indexElement, 1);\r\n                dispatch(setFavoriteLocation(favoriteLocation));\r\n                setStatusLocation(false);\r\n                setShow(false);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.navBlock}>\r\n            <ModalPopUp show={show} title={popUpMessage.title} message={popUpMessage.message}/>\r\n            <div className={styles.container}>\r\n                <div><img src={logo} alt='logo' className={styles.images}/></div>\r\n                <div>\r\n                    <NavLink to=\"/\" exact activeStyle={{fontWeight: \"bold\", borderBottom: '3px solid white'}}\r\n                             className={styles.NavLink} onClick={()=>{changePage('/')}}>Home</NavLink>\r\n                    <NavLink to=\"/favorite\" activeStyle={{fontWeight: \"bold\", borderBottom: '3px solid white'}}\r\n                             className={styles.NavLink} onClick={()=>{changePage('/favorite')}}>Favorite</NavLink>\r\n                </div>\r\n                <div>\r\n                    {(currentPage === '/') ? (\r\n                        (statusLocation) ? (\r\n                            <Button variant=\"outline-light\" className={styles.btnSave} onClick={removeLocation}>{(screenWidth <= 420) ? '' : 'added '}\r\n                                <FontAwesomeIcon icon={faHeart}/>\r\n                            </Button>\r\n                        ) : (\r\n                            <Button variant=\"outline-light\" className={styles.btn} onClick={addLocation}>{(screenWidth <= 420) ? '' : 'add to '}\r\n                                <FontAwesomeIcon icon={faHeart}/>\r\n                            </Button>\r\n                        )) : null}\r\n                        <Button variant=\"outline-light\" className={styles.btn} onClick={changeDegrees}>&deg;{(currentDegrees === 'celsius') ? ('C') : ('F')}</Button>\r\n                        <Button variant=\"outline-light\" className={styles.btn} onClick={changeThemes}><FontAwesomeIcon icon={(currentTheme === 'light') ? (faSun) : (faMoon)}/></Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import './App.css';\nimport {Route, Switch, Redirect} from \"react-router\";\nimport Main from \"./Pages/Main/Main\";\nimport Favorite from \"./Pages/Favorite/Favorite\";\nimport NavBar from \"./Components/Navigation/NavBar/NavBar\";\nimport {useSelector} from \"react-redux\";\n\nfunction App() {\n\n    const currentTheme = useSelector(state => state.themeStates.theme);\n    return (\n        <div className='App' style={{backgroundColor: `${(currentTheme === 'light') ? ('#F5F5F5') : ('#272E38')}`}}>\n            <NavBar className='Navbar'/>\n                <Switch>\n                    <Route path={'/'} exact component={Main}/>\n                    <Route path={'/favorite'} component={Favorite}/>\n                    <Redirect exact from='*' to='/'/>\n                </Switch>\n        </div>\n    )\n}\n\nexport default App;\n","import {combineReducers} from \"redux\";\r\nimport {createStore, applyMiddleware} from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from \"redux-thunk\";\r\nimport themeReducer from \"./Reducers/themeReducer\";\r\nimport weatherReducer from \"./Reducers/weatherReducer\";\r\nimport locationReducer from \"./Reducers/locationReducer\";\r\nimport favoriteLocationReducer from \"./Reducers/favoriteLocationReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    themeStates: themeReducer,\r\n    weatherState: weatherReducer,\r\n    locationState: locationReducer,\r\n    favoritesLocationsState: favoriteLocationReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <Provider store={store}>\n              <App />\n          </Provider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}